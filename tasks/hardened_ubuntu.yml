---

- validate:
    schema:
      type: object
      properties:
        fail2ban_ignored_ips:
          type: array
          items:
            type: string
            format: ipv4
        fail2ban_slack_webhook_url:
          type: string
          format: uri
        os_kernel_ip_forwarding_enabled:
          type: boolean
          default: no
        os_swap_device:
          type: string
        ssh_allowed_networks:
          type: array
          items:
            type: string
            format: ipv4
          minLength: 1
          default:
            - 0.0.0.0/0
        ssh_allowed_users:
          type: array
          items:
            type: string
          minLength: 1
          default:
            - ubuntu
        ssh_agent_forwarding_enabled:
          type: boolean
          default: no
        ssh_authorized_keys:
          type: array
          items:
            type: string
          default: []
        ssh_exclusive_keys_enabled:
          type: boolean
          default: no
        ssh_sftp_enabled:
          type: boolean
          default: yes
        ssh_tun_device_forwarding_enabled:
          type: boolean
          default: no
        stackdriver_enabled:
          type: boolean
          default: no
      required:
        - os_kernel_ip_forwarding_enabled
        - ssh_allowed_networks
        - ssh_allowed_users
        - ssh_agent_forwarding_enabled
        - ssh_authorized_keys
        - ssh_exclusive_keys_enabled
        - ssh_sftp_enabled
        - ssh_tun_device_forwarding_enabled
        - stackdriver_enabled
    instance: "{{ hardened_ubuntu }}"
  register: hardened_ubuntu_validated

- set_fact:
    hardened_ubuntu_v: "{{ hardened_ubuntu_validated.result }}"

- name: "Uninstall sshguard"
  apt:
    name: sshguard
    state: absent
  become: yes

- name: "Upgrade packages"
  import_role:
    name: bedrock.os
  vars:
    os:
      command: upgrade_packages
      update_cache: yes

- name: "Authorize SSH keys"
  import_role:
    name: bedrock.ssh
  vars:
    ssh:
      command: authorize_keys
      authorized_keys: "{{ hardened_ubuntu_v.ssh_authorized_keys }}"
      exclusive: "{{ hardened_ubuntu_v.ssh_exclusive_keys_enabled }}"
  when: (hardened_ubuntu_v.ssh_authorized_keys | length) > 0

- name: "Install editors"
  apt:
    name:
      - nano
      - vim
    state: present
  become: yes

- name: 'Harden SSH'
  import_role:
    name: bedrock.ssh
  vars:
    ssh:
      command: harden
      agent_forwarding_enabled: "{{ hardened_ubuntu_v.ssh_agent_forwarding_enabled }}"
      allowed_users: "{{ hardened_ubuntu_v.ssh_allowed_users }}"
      sftp_enabled: "{{ hardened_ubuntu_v.ssh_sftp_enabled }}"
      tun_device_forwarding_enabled: "{{ hardened_ubuntu_v.ssh_tun_device_forwarding_enabled }}"

- name: 'Install UFW'
  import_role:
    name: bedrock.os
  vars:
    os:
      command: install_ufw
      ssh_allowed_networks: "{{ hardened_ubuntu_v.ssh_allowed_networks }}"

- name: "Install Stackdriver agents"
  import_role:
    name: bedrock.stackdriver
  vars:
    stackdriver:
      command: install
  when: hardened_ubuntu_v.stackdriver_enabled

- name: 'Install fail2ban'
  import_role:
    name: bedrock.fail2ban
  vars:
    fail2ban:
      command: install
      stackdriver_enabled: "{{ hardened_ubuntu_v.stackdriver_enabled }}"

- name: 'Add SSH jail to fail2ban'
  import_role:
    name: bedrock.fail2ban
  vars:
    fail2ban:
      command: create_sshd_jail
      ignored_ips: "{{ hardened_ubuntu_v.fail2ban_ignored_ips | default(None) }}"
      slack_webhook_url: "{{ hardened_ubuntu_v.fail2ban_slack_webhook_url | default(None) }}"

- name: 'Harden operating system'
  import_role:
    name: bedrock.os
  vars:
    os:
      command: harden
      kernel_ip_forwarding: "{{ hardened_ubuntu_v.os_kernel_ip_forwarding_enabled }}"

- name: "Install unattended-upgrades"
  import_role:
    name: bedrock.os
  vars:
    os:
      command: install_unattended_upgrades
      stackdriver_enabled: "{{ hardened_ubuntu_v.stackdriver_enabled }}"

- import_role:
    name: bedrock.os
  vars:
    os:
      command: swap
      device: "{{ hardened_ubuntu_v.os_swap_device }}"
  when: "'os_swap_device' in hardened_ubuntu_v"
